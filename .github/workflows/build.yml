name: build_test_deploy

on:
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2016, macos-10.15]
        python-version: [3.8]
        include:
          - os: ubuntu-latest
            python-version: 3.8
            wheel: x86_64

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Docker Buildx
        if: matrix.os == 'ubuntu-latest'
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade -q pip pytest wheel setuptools twine

      - name: Test with pytest
        if: matrix.os != 'ubuntu-latest'
        run: |
          pip install .
          pytest

      - name: Build macOS/Windows wheel
        if: matrix.os != 'ubuntu-latest'
        run: python setup.py -q bdist_wheel --cpp-extension

      - name: Build x86 Linux wheels
        if: matrix.wheel == 'x86_64'
        run: |
          #docker run -e PLAT=manylinux2014_x86_64 -v `pwd`:/io quay.io/pypa/manylinux2014_x86_64 /io/scripts/build-manylinux-wheels.sh
          docker build -t skdecide_x86_64 --output tmpwheelhouse -f scripts/Dockerfile_x86_64 .
          mkdir -p dist
          mv tmpwheelhouse/wheelhouse/*.whl dist/

      - name: Upload as build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist/*.whl